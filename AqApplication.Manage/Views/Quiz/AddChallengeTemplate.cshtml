@model AqApplication.Entity.Challenge.ChallengeTemplate

@{
    ViewBag.Title = "Challenge Template";
}
@Html.Partial("_Breadcrumb", new AqApplication.Manage.Models.CommonBreadcrumbModel
{
    Pagename = "Yeni Challenge Template",
    Message = (string)TempData["message"],
    isSuccess = (bool?)TempData["success"],
    Backurl = Url.Action("Exams"),
    Backpagename = "Sınav Listesi"
})


<div class="card mb-3">
    <div class="card-header">
        <i class="glyphicon glyphicon-edit"></i> Yeni Challenge Template
    </div>
    <div class="card-body">
        @using (Html.BeginForm("AddChallengeTemplate", "Quiz", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @rows = 10, @cols = 40 } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "dpicker form-control", Style = "width:70%; float:left;" })
                            @Html.DropDownListFor(model => model.StartDateTime, Utilities.SelectLists.TimeDropDown(), new { @class = "timepicker form-control", Style = "width:30%; float:left;" })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.EndDate, new { @class = "dpicker form-control", Style = "width:70%; float:left;" })
                            @Html.DropDownListFor(model => model.EndDateTime, Utilities.SelectLists.TimeDropDown(), new { @class = "timepicker form-control", Style = "width:30%; float:left;" })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label class="col-md-6">  @Html.RadioButtonFor(model => model.Type, "1")Challange Modu</label>

                    <label class="col-md-6">  @Html.RadioButtonFor(model => model.Type, "2") Antreman Modu</label>
                </div>
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LectureId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.LectureId, (IEnumerable<SelectListItem>)ViewBag.lectureSelectList, "Seçiniz", new { @class = "form-control " })
                    @Html.ValidationMessageFor(model => model.LectureId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Kaydet" class="btn btn-info" />
                    <a href="@Url.Action("ChallengeTemplates")">
                        <input type="button" value="İptal" class="btn btn-danger" />
                    </a>

                </div>
            </div>
        </div>
        }

    </div>
</div>


<div>
    <a href="@Url.Action("ChallengeTemplates")" class="btn btn-success">
        <span class="glyphicon glyphicon-arrow-left"></span> Listeye Dön
    </a>
</div>


