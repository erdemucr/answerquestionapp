@using AqApplication.Manage.Models;
@using AqApplication.Manage.Utilities;
@model AnswerQuestionApp.Manage.Models.ChallengeTemplateModel

@{
    ViewBag.Title = "Challenge List";
}

@Html.Partial("_Breadcrumb", new AqApplication.Manage.Models.CommonBreadcrumbModel
{
    Pagename = ViewBag.templateName +" Template Kuralları",
    Message = (string)TempData["message"],
    isSuccess = (bool?)TempData["success"],
    Backurl = @Url.Action("ChallengeTemplates", "Quiz"),
    Backpagename = "Challenge Templetes"

})

@section _styles{
    <style type="text/css">
        .checkraw {
            width: 50px;
            height: 24px;
            text-align: center;
        }

        .checkRow {
            width: 20%;
            float: left;
        }

        .rawInput {
            width: 80%;
            float: left;
            opacity: 0.5;
        }
    </style>
}
<p>
    <button onclick="OpenAddRuleModal(this);" class="btn btn-success " id="newRuleBtn">
        <span class="glyphicon glyphicon-plus"></span> Yeni Kural
    </button>
</p>

<div class="card">
    <div class="card-header">
        <i class="glyphicon glyphicon-edit"></i> @ViewBag.templateName Template Kuralları
    </div>
    <table class="table table-responsive table-striped table-dar">
        <thead>
            <tr>
                <th>#</th>
                <th>Soru Adedi</th>
                <th>Sınav</th>
                <th>Ders</th>
                <th>Konu</th>
                <th>Alt Konu</th>
                <th>Zorluk</th>
                <th>
                    @Html.DisplayNameFor(model => model.ChallengeItem.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChallengeItem.Creator)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChallengeItem.ModifiedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChallengeItem.Editor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChallengeItem.IsActive)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>


            @if (Model.ChallengeList != null)
            {
                foreach (var item in Model.ChallengeList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Count)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Exam.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Lecture.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Subject.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubSubject.Name)
                        </td>
                        <td>
                            @item.Difficulty.DifficultText()
                        </td>
                        <td>
                            @item.CreatedDate.RegularDatetime()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AppUserCreator.UserName)
                        </td>
                        <td>
                            @item.ModifiedDate.RegularDatetime()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AppUserEditor.UserName)
                        </td>
                        <td>
                            @item.IsActive.StatusText()
                        </td>
                        <td>
                            <button onclick="EditRule(this,'@item.Id');" class="btn btn-info">
                                <span class="glyphicon glyphicon-arrow-down"></span> Düzenle
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">Kayıt bulunmadı</td>
                </tr>
            }
        </tbody>

    </table>

</div>
</div>



<div id="ruleModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="ruleModalContent">

        </div>
    </div>
</div>


@section _scripts{

    <script type="text/javascript">
        $(document).ready(function () {

        });
        $(document).on("click", ".checkraw", function () {
            var $el = $(this);
            var checked = $el.prop('checked');
            if (checked) {
                $el.parent().next().css('opacity', '1');
            }
            else {
                $el.parent().next().css('opacity', '0.5');
            }

        });
        function OpenAddRuleModal(el) {
            $.ajax({
                type: 'GET',
                beforeSend: function () {
                    $(el).addClass("m-loader m-loader--right m-loader--light")
                },
                url: '/Quiz/AddChallengeTemplatesItems?challengeTemplateId=@ViewBag.templateId',
                success: function (data) {
                    $("#ruleModalContent").html(data);
                    $("#ruleModalHeader").text('Yeni Kural');
                    $('.onlyNumber').inputmask("numeric", {
                        min: 0,
                        max: 100,
                        placeholder: '0'
                    });
                    $("#ruleModal").modal('show');
                    $(el).removeClass("m-loader m-loader--right m-loader--light")
                }
            });
        }
        function EditRule(el,ids) {
            $.ajax({
                type: 'GET',
                beforeSend: function () {
                    $(el).addClass("m-loader m-loader--right m-loader--light")
                },
                url: '/Quiz/EditChallengeTemplatesItems?challengeTemplateId=' + ids,
                success: function (data) {
                    $("#ruleModalContent").html(data);
                    $("#ruleModalHeader").text('Kural Düzenle');
                    $('.onlyNumber').inputmask("numeric", {
                        min: 0,
                        max: 100,
                        placeholder: '0'
                    });
                    var lectureId = $("#LectureId").val();
                    var subjectId = $("#SubjectIdHdn").val();
                    var subSubjectId = $("#SubSubjectIdHdn").val();
                    LoadSubjects(lectureId, true, subjectId);
                    LoadSubSubjects(subjectId, true, subSubjectId);
                    $("#ruleModal").modal('show');
                    $(".checkraw").each(function (i) {
                        var $el = $(this);
                        var checked = $el.prop('checked');
                        if (checked) {
                            $el.parent().next().css('opacity', '1');
                        }
                        else {
                            $el.parent().next().css('opacity', '0.5');
                        }
                    });
                    $(el).removeClass("m-loader m-loader--right m-loader--light")
                }
            });
        }
        $(document).on("change", "#LectureId", function () {
            var ids = $(this).val();
            LoadSubjects(ids, false,'');
            $("#SubSubjectId").html("");
        });
        $(document).on("change", "#SubjectId", function () {
            var ids = $(this).val();
            LoadSubSubjects(ids, false,'');
        });
        function LoadSubjects(lectureId, onLoad,subjectId) {
            if (lectureId !== "" && lectureId !== null) {
                $.ajax({
                    type: "GET",
                    url: "/Question/GetSubjects",
                    data: {
                        "lectureId": lectureId
                    },
                    success: function (data) {
                        var $el = $("#SubjectId");
                        $el.html("");
                        $el.append("<option value='null'>Seçiniz</option>");
                        $.each(data.data, function (i, v) {
                            $el.append("<option value='" + v.key + "'>" + v.value + "</option>");
                        });
                        if (subjectId !== null && subjectId !== "" && onLoad) {
                            $el.val(subjectId);
                        }
                        else {
                            $el.val(null);
                        }
                    }
                });
            }
        }

        function LoadSubSubjects(subjectId, onLoad, subsubjectId) {
            if (subjectId !== "" && subjectId !== null) {
                $.ajax({
                    type: "GET",
                    url: "/Question/GetSubSubjects",
                    data: { "lectureId": subjectId },
                    success: function (data) {
                        var $el = $("#SubSubjectId");
                        $el.html("");
                        $el.append("<option value='null'>Seçiniz</option>");
                        $.each(data.data, function (i, v) {
                            $el.append("<option value='" + v.key + "'>" + v.value + "</option>");
                        });
                        if (subsubjectId !== null && subsubjectId !== "" && onLoad) {
                            $el.val(subsubjectId);
                        }
                        else {
                            $el.val("");
                        }
                    },
                    data: {
                        "subjectId": subjectId
                    }
                });


            }
        }
    </script>

}